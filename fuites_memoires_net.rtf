{\rtf1\ansi\ansicpg1252\cocoartf2709
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Consolas;\f1\fnil\fcharset0 Calibri;\f2\froman\fcharset0 Times-Roman;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red0\green0\blue255;\red37\green127\blue159;
\red109\green109\blue109;\red15\green112\blue1;\red14\green110\blue109;\red144\green1\blue18;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\cssrgb\c0\c0\c100000;\cssrgb\c16863\c56863\c68627;
\cssrgb\c50196\c50196\c50196;\cssrgb\c0\c50196\c0;\cssrgb\c0\c50196\c50196;\cssrgb\c63922\c8235\c8235;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl256\sa213\partightenfactor0

\f0\fs24 \cf2 \expnd0\expndtw0\kerning0
HRESULT ObjectReferences(\uc0\u8232 \'a0\'a0 ObjectID objectId,\u8232 \'a0\'a0 ClassID classId,\u8232 \'a0\'a0 ULONG\'a0\'a0\'a0 cObjectRefs,\u8232 \'a0\'a0 ObjectID objectRefIds[] \u8232 );\'a0 
\f1\fs29\fsmilli14667 \
\pard\pardeftab720\partightenfactor0
\cf2 \'a0\
\'a0\
\pard\pardeftab720\partightenfactor0

\f2\fs25\fsmilli12667 \cf3 struct\cf2  \cf4 ObjectNode
\f1\fs29\fsmilli14667 \cf2 \

\f2\fs25\fsmilli12667 \{
\f1\fs29\fsmilli14667 \

\f2\fs25\fsmilli12667 \cf3 public\cf2 :
\f1\fs29\fsmilli14667 \

\f2\fs25\fsmilli12667 \'a0\'a0\'a0 ObjectNode(\cf4 ObjectID\cf2  \cf5 objectId\cf2 );
\f1\fs29\fsmilli14667 \

\f2\fs25\fsmilli12667 \'a0
\f1\fs29\fsmilli14667 \

\f2\fs25\fsmilli12667 \cf3 public\cf2 :
\f1\fs29\fsmilli14667 \

\f2\fs25\fsmilli12667 \'a0\'a0\'a0 \cf4 ObjectID\cf2  instance;
\f1\fs29\fsmilli14667 \

\f2\fs25\fsmilli12667 \'a0\'a0\'a0 std::\cf4 vector\cf2 <\cf4 ObjectNode\cf2 *> rootRefs;
\f1\fs29\fsmilli14667 \

\f2\fs25\fsmilli12667 \};
\f1\fs29\fsmilli14667 \
\'a0\

\f2\fs25\fsmilli12667 \cf3 bool\cf2  DumpNode(\cf4 ObjectNode\cf2 * \cf5 node\cf2 , std::\cf4 vector\cf2 <\cf4 ObjectID\cf2 >& \cf5 referenceStack\cf2 )
\f1\fs29\fsmilli14667 \

\f2\fs25\fsmilli12667 \{
\f1\fs29\fsmilli14667 \

\f2\fs25\fsmilli12667 \'a0\'a0\'a0 \cf6 // end of recursion: the node is a root
\f1\fs29\fsmilli14667 \cf2 \

\f2\fs25\fsmilli12667 \'a0\'a0\'a0 \cf3 if\cf2  (\cf5 node\cf2 ->rootRefs.size() == 0)
\f1\fs29\fsmilli14667 \

\f2\fs25\fsmilli12667 \'a0\'a0\'a0 \{
\f1\fs29\fsmilli14667 \

\f2\fs25\fsmilli12667 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf6 //\'a0 dump the root
\f1\fs29\fsmilli14667 \cf2 \

\f2\fs25\fsmilli12667 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 std::cout \cf7 <<\cf2  std::endl;
\f1\fs29\fsmilli14667 \

\f2\fs25\fsmilli12667 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 std::cout \cf7 <<\cf2  std::hex \cf7 <<\cf2  \cf5 node\cf2 ->instance \cf7 <<\cf2  std::dec;
\f1\fs29\fsmilli14667 \

\f2\fs25\fsmilli12667 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf4 COR_PRF_GC_ROOT_KIND\cf2  kind;
\f1\fs29\fsmilli14667 \

\f2\fs25\fsmilli12667 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf4 COR_PRF_GC_ROOT_FLAGS\cf2  flags;
\f1\fs29\fsmilli14667 \

\f2\fs25\fsmilli12667 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf3 if\cf2  (FindRoot(_roots, \cf5 node\cf2 ->instance, kind, flags))
\f1\fs29\fsmilli14667 \

\f2\fs25\fsmilli12667 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 \{
\f1\fs29\fsmilli14667 \

\f2\fs25\fsmilli12667 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 std::cout \cf7 <<\cf2  \cf8 " | "\cf2 ;
\f1\fs29\fsmilli14667 \

\f2\fs25\fsmilli12667 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 DumpKind(kind);
\f1\fs29\fsmilli14667 \

\f2\fs25\fsmilli12667 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 std::cout \cf7 <<\cf2  \cf8 " - "\cf2 ;
\f1\fs29\fsmilli14667 \

\f2\fs25\fsmilli12667 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 DumpFlags(flags);
\f1\fs29\fsmilli14667 \

\f2\fs25\fsmilli12667 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 \}
\f1\fs29\fsmilli14667 \

\f2\fs25\fsmilli12667 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf3 else
\f1\fs29\fsmilli14667 \cf2 \

\f2\fs25\fsmilli12667 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 \{
\f1\fs29\fsmilli14667 \

\f2\fs25\fsmilli12667 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 std::cout \cf7 <<\cf2  \cf8 " | ?"\cf2 ;
\f1\fs29\fsmilli14667 \

\f2\fs25\fsmilli12667 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 \}
\f1\fs29\fsmilli14667 \

\f2\fs25\fsmilli12667 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 std::cout \cf7 <<\cf2  \cf8 " = "\cf2 ;
\f1\fs29\fsmilli14667 \

\f2\fs25\fsmilli12667 \'a0
\f1\fs29\fsmilli14667 \

\f2\fs25\fsmilli12667 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 DumpObjectType(\cf5 node\cf2 ->instance, _pCorProfilerInfo, _pFrameStore);
\f1\fs29\fsmilli14667 \

\f2\fs25\fsmilli12667 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 std::cout \cf7 <<\cf2  std::endl;
\f1\fs29\fsmilli14667 \

\f2\fs25\fsmilli12667 \'a0
\f1\fs29\fsmilli14667 \

\f2\fs25\fsmilli12667 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf6 // dump the references from the root
\f1\fs29\fsmilli14667 \cf2 \

\f2\fs25\fsmilli12667 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf3 for\cf2  (\cf4 int16_t\cf2  i = \cf5 referenceStack\cf2 .size()-1; i >= 0; i--)
\f1\fs29\fsmilli14667 \

\f2\fs25\fsmilli12667 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 \{
\f1\fs29\fsmilli14667 \

\f2\fs25\fsmilli12667 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf4 ObjectID\cf2  reference = \cf5 referenceStack\cf7 [\cf2 i\cf7 ]\cf2 ;
\f1\fs29\fsmilli14667 \

\f2\fs25\fsmilli12667 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 std::cout \cf7 <<\cf2  \cf8 " --> "\cf2 ;
\f1\fs29\fsmilli14667 \

\f2\fs25\fsmilli12667 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 std::cout \cf7 <<\cf2  std::hex \cf7 <<\cf2  reference \cf7 <<\cf2  std::dec;
\f1\fs29\fsmilli14667 \

\f2\fs25\fsmilli12667 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 std::cout \cf7 <<\cf2  \cf8 " = "\cf2 ;
\f1\fs29\fsmilli14667 \

\f2\fs25\fsmilli12667 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 DumpObjectType(reference, _pCorProfilerInfo, _pFrameStore);
\f1\fs29\fsmilli14667 \

\f2\fs25\fsmilli12667 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 std::cout \cf7 <<\cf2  std::endl;
\f1\fs29\fsmilli14667 \

\f2\fs25\fsmilli12667 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 \}
\f1\fs29\fsmilli14667 \

\f2\fs25\fsmilli12667 \'a0
\f1\fs29\fsmilli14667 \

\f2\fs25\fsmilli12667 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf3 return\cf2  \cf3 true\cf2 ;
\f1\fs29\fsmilli14667 \

\f2\fs25\fsmilli12667 \'a0\'a0\'a0 \}
\f1\fs29\fsmilli14667 \

\f2\fs25\fsmilli12667 \'a0
\f1\fs29\fsmilli14667 \

\f2\fs25\fsmilli12667 \'a0\'a0\'a0 \cf6 // detect cycles
\f1\fs29\fsmilli14667 \cf2 \

\f2\fs25\fsmilli12667 \'a0\'a0\'a0 \cf3 if\cf2  (Find(\cf5 referenceStack\cf2 , \cf5 node\cf2 ->instance))
\f1\fs29\fsmilli14667 \

\f2\fs25\fsmilli12667 \'a0\'a0\'a0 \{
\f1\fs29\fsmilli14667 \

\f2\fs25\fsmilli12667 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf3 return\cf2  \cf3 false\cf2 ;
\f1\fs29\fsmilli14667 \

\f2\fs25\fsmilli12667 \'a0\'a0\'a0 \}
\f1\fs29\fsmilli14667 \

\f2\fs25\fsmilli12667 \'a0
\f1\fs29\fsmilli14667 \

\f2\fs25\fsmilli12667 \'a0\'a0\'a0 \cf6 // go up into the reference chain
\f1\fs29\fsmilli14667 \cf2 \

\f2\fs25\fsmilli12667 \'a0\'a0\'a0 \cf5 referenceStack\cf2 .push_back(\cf5 node\cf2 ->instance);
\f1\fs29\fsmilli14667 \

\f2\fs25\fsmilli12667 \'a0\'a0\'a0 \cf3 for\cf2  (\cf3 auto\cf2 & parentNode : \cf5 node\cf2 ->rootRefs)
\f1\fs29\fsmilli14667 \

\f2\fs25\fsmilli12667 \'a0\'a0\'a0 \{
\f1\fs29\fsmilli14667 \

\f2\fs25\fsmilli12667 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf3 if\cf2  (DumpNode(parentNode, \cf5 referenceStack\cf2 ))
\f1\fs29\fsmilli14667 \

\f2\fs25\fsmilli12667 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 \{
\f1\fs29\fsmilli14667 \

\f2\fs25\fsmilli12667 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf3 return\cf2  \cf3 true\cf2 ;
\f1\fs29\fsmilli14667 \

\f2\fs25\fsmilli12667 \'a0\'a0\'a0\'a0\'a0\'a0\'a0 \}
\f1\fs29\fsmilli14667 \

\f2\fs25\fsmilli12667 \'a0\'a0\'a0 \}
\f1\fs29\fsmilli14667 \

\f2\fs25\fsmilli12667 \'a0\'a0\'a0 \cf5 referenceStack\cf2 .pop_back();
\f1\fs29\fsmilli14667 \

\f2\fs25\fsmilli12667 \'a0
\f1\fs29\fsmilli14667 \

\f2\fs25\fsmilli12667 \'a0\'a0\'a0 \cf3 return\cf2  \cf3 false\cf2 ;
\f1\fs29\fsmilli14667 \

\f2\fs25\fsmilli12667 \}
\f1\fs29\fsmilli14667 \
\pard\pardeftab720\sl313\sa213\partightenfactor0
\cf2 \'a0\
\pard\pardeftab720\partightenfactor0
\cf2 \'a0\
\pard\pardeftab720\partightenfactor0

\f2\fs25\fsmilli12667 \cf2 \'a0
\f1\fs29\fsmilli14667 \

\f2\fs25\fsmilli12667 \cf3 struct\cf2  \cf4 ObjectRoot
\f1\fs29\fsmilli14667 \cf2 \

\f2\fs25\fsmilli12667 \{
\f1\fs29\fsmilli14667 \

\f2\fs25\fsmilli12667 \cf3 public\cf2 :
\f1\fs29\fsmilli14667 \

\f2\fs25\fsmilli12667 \'a0\'a0\'a0 \cf4 ObjectID\cf2  instance;
\f1\fs29\fsmilli14667 \

\f2\fs25\fsmilli12667 \'a0\'a0\'a0 \cf4 COR_PRF_GC_ROOT_KIND\cf2  kind;
\f1\fs29\fsmilli14667 \

\f2\fs25\fsmilli12667 \'a0\'a0\'a0 \cf4 COR_PRF_GC_ROOT_FLAGS\cf2  flags;
\f1\fs29\fsmilli14667 \

\f2\fs25\fsmilli12667 \};
\f1\fs29\fsmilli14667 \
\pard\pardeftab720\sl313\sa213\partightenfactor0
\cf2 \'a0\
\'a0\
}